name: Build Docker Images

on:
  push:
    branches:
      - main
    paths:
      - docker/**
      - .github/workflows/build-images.yaml
  pull_request:
    paths:
      - docker/**
      - .github/workflows/build-images.yaml

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - docker-image: webhook-listen
            ref: 7fc2b4a785c6f9417629e40365ea95ff3ecdca72
            image-tags: ghcr.io/kitware/webhook-listen:0.0.1
          - docker-image: ghostflow-director
            ref: de97f982417d575f3f64d09bcfac9f6895e175f8
            image-tags: ghcr.io/kitware/ghostflow-director:0.0.1

    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      # Build the builder image which also creates a vendored tarball
      - name: Build ${{ matrix.docker-image }}-builder
        id: docker-build-builder
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: ./docker/builder
          build-args: |
            APP=${{ matrix.docker-image }}
            REF=${{ matrix.ref }}
          file: ./docker/builder/Dockerfile
          push: false
          tags: ${{ matrix.docker-image }}-builder:latest
          platforms: linux/amd64

      # Extract and upload tarball artifact
      - name: Extract Vendored Tarball
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker run \
            -v ${{ github.workspace }}:/stage ${{ steps.docker-build-builder.outputs.imageid }} \
            -c "cp ${{ matrix.docker-image }}-${{ matrix.ref }}.tar.xz /stage"

      - name: Upload Tarball
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.docker-image }}-${{ matrix.ref }}.tar.xz
          path: ${{ matrix.docker-image }}-${{ matrix.ref }}.tar.xz
          if-no-files-found: error
          retention-days: 1
          overwrite: true

      # Build the final application image
      - name: Build ${{ (github.ref == 'refs/heads/main' && 'and push ') || '' }}${{ matrix.docker-image }}
        id: docker-build-push
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6.16.0
        with:
          context: ./docker/app-only
          file: ./docker/app-only/Dockerfile
          build-args: |
            APP=${{ matrix.docker-image }}
          push: false # ${{ github.ref == 'refs/heads/main' }} # only publish image on push to main
          tags: ${{ matrix.image-tags }}
          platforms: linux/amd64

      - name: Image digest
        run: echo ${{ steps.docker-build-push.outputs.digest }}
